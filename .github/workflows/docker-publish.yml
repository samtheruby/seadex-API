name: Build and Push Docker Image

run-name: |
  ${{
    github.ref_type == 'tag' && format('seadex-API Release {0}', github.ref_name) ||
    github.event_name == 'pull_request' && format('seadex-API PR #{0}: {1}', github.event.number, github.event.pull_request.title) ||
    format('seadex-API Build: {0}', github.event.head_commit.message)
  }}

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request' && (github.ref_name == 'main' || github.ref_name == 'master' || github.ref_type == 'tag')
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Branch-based tags (only for main/master)
            type=ref,event=branch,enable=${{ github.ref_name == 'main' || github.ref_name == 'master' }}

            # PR tags (for testing)
            type=ref,event=pr

            # Version tags (from git tags)
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=semver,pattern={{major}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}

            # Pre-release tags
            type=semver,pattern={{version}},suffix=-alpha,enable=${{ startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-alpha') }}
            type=semver,pattern={{version}},suffix=-beta,enable=${{ startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-beta') }}

            # Latest tag (only for main branch stable releases)
            type=raw,value=latest,enable=${{ github.ref_name == 'main' }}

            # Development tag (for main branch)
            type=raw,value=dev,enable=${{ github.ref_name == 'main' }}

            # Alpha/Beta convenience tags
            type=raw,value=alpha,enable=${{ startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-alpha') }}
            type=raw,value=beta,enable=${{ startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-beta') }}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' && (github.ref_name == 'main' || github.ref_name == 'master' || github.ref_type == 'tag') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        if: github.event_name != 'pull_request' && (github.ref_name == 'main' || github.ref_name == 'master' || github.ref_type == 'tag')
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

      - name: Output image tags
        run: |
          echo "🐳 Built Docker image with the following tags:"
          echo "${{ steps.meta.outputs.tags }}"
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "📝 This is a PR build - image was built but not pushed to registry"
          elif [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "🏷️ This is a tagged release - image pushed to registry"
          elif [[ "${{ github.ref_name }}" == "main" || "${{ github.ref_name }}" == "master" ]]; then
            echo "🚀 This is a main branch build - image pushed to registry"
          else
            echo "🔧 This is a feature branch - image was built but not pushed to registry"
          fi
